name: config
spec:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 127.0.0.1, port_value: 9000 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: "tcp_proxy"
                cluster: cluster_0
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      log_format:
                        json_format:
                          authority: '%REQ(:AUTHORITY)%'
                          bytes_received: '%BYTES_RECEIVED%'
                          bytes_sent: '%BYTES_SENT%'
                          connection_termination_details: '%CONNECTION_TERMINATION_DETAILS%'
                          downstream_local_address: '%DOWNSTREAM_LOCAL_ADDRESS%'
                          downstream_remote_address: '%DOWNSTREAM_REMOTE_ADDRESS%'
                          duration: '%DURATION%'
                          method: '%REQ(:METHOD)%'
                          path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
                          protocol: '%PROTOCOL%'
                          request_id: '%REQ(X-REQUEST-ID)%'
                          requested_server_name: '%REQUESTED_SERVER_NAME%'
                          response_code: '%RESPONSE_CODE%'
                          response_code_details: '%RESPONSE_CODE_DETAILS%'
                          response_flags: '%RESPONSE_FLAGS%'
                          route_name: '%ROUTE_NAME%'
                          start_time: '%START_TIME%'
                          upstream_cluster: '%UPSTREAM_CLUSTER%'
                          upstream_host: '%UPSTREAM_HOST%'
                          upstream_local_address: '%UPSTREAM_LOCAL_ADDRESS%'
                          upstream_service_time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'
                          upstream_transport_failure_reason: '%UPSTREAM_TRANSPORT_FAILURE_REASON%'
                          user_agent: '%REQ(USER-AGENT)%'
                          x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'
                      path: /dev/stdout
  clusters:
    - name: cluster_0
      connect_timeout: 2s
      load_assignment:
        cluster_name: cluster_0
      lb_policy: MAGLEV
      common_lb_config:
        healthy_panic_threshold: 0
      health_checks:
        - timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          http_health_check:
            path: /health
      maglev_lb_config:
        table_size: 86243